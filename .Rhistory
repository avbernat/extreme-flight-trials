dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
# pwc = "Pairwise Wilcoxon test" between groups
pwc <- d %>%
filter(distance > 2000) %>%
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- d %>% kruskal_test(distance ~ host_plant)
ggplot(d, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
# pwc = "Pairwise Wilcoxon test" between groups
pwc <- d %>%
filter(distance) %>%
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
# pwc = "Pairwise Wilcoxon test" between groups
pwc <- d %>%
#filter(distance > 0) %>%
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- d %>% kruskal_test(distance ~ host_plant)
ggplot(d, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
# pwc = "Pairwise Wilcoxon test" between groups
pwc <- d %>%
filter(flew_b == 1) %>%
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- d %>% kruskal_test(distance ~ host_plant)
ggplot(d, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
pwc <- d %>%
filter(flew_b == 1) %>% # select only those that flew
dunn_test(distance ~ sex, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "sex")
res.kruskal <- d %>% kruskal_test(distance ~ sex)
ggplot(d, aes(sex, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Sex") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
pwc <- d %>%
filter(flew_b == 1) %>% # select only those that flew
dunn_test(distance ~ sex, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "sex")
res.kruskal <- d %>% kruskal_test(distance ~ sex)
ggplot(d, aes(sex, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Sex") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
rm(list=ls())
setwd("~/Desktop/git_repositories/extreme-flight-trials/")
library(rstatix)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
source_path = "~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Rsrc/"
script_names = c("center_flight_data.R", # Re-centers data
"clean_flight_data.R", # Loads and cleans data
"unique_flight_data.R")
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
dT1 = data_tested[data_tested$trial_type == "T1",]
d = dT1[,c("average_speed", "distance", "sex", "sex_c", "eggs_b",
"population", "host_plant", "flew","flew_b", "flight_type",
"mass", "beak", "thorax", "wing", "body", "wing2body")]
temp_treatments = c(12, 20, 28, 36, 44)
RH_treatments = c(40, 55, 70, 85, 100)
d$temperature = 0
d$RH = 0
d$temperature <- sample(temp_treatments, nrow(d), replace = TRUE)
d$RH <- sample(RH_treatments, nrow(d), replace = TRUE)
d[d$temperature == 12,]$distance = d[d$temperature == 12,]$distance * 0.25  # drop by 75%
d[d$temperature == 20,]$distance = d[d$temperature == 20,]$distance * 0.50  # drop by 50%
# d[d$temperature == 28,]$distance = d[d$temperature == 28,]$distance # no change
d[d$temperature == 36,]$distance = d[d$temperature == 36,]$distance * 0.75 # drop by 25%
d[d$temperature == 44,]$distance = d[d$temperature == 44,]$distance * 0.50  # drop by 50%
d[d$temperature == 12,]$average_speed = d[d$temperature == 12,]$average_speed * 0.66  # drop by 33%
d[d$temperature == 20,]$average_speed = d[d$temperature == 20,]$average_speed * 0.90  # drop by 10%
# d[d$temperature == 28,]$average_speed = d[d$temperature == 28,]$average_speed # no change
d[d$temperature == 36,]$average_speed = d[d$temperature == 36,]$average_speed * 0.90 # drop by 10%
d[d$temperature == 44,]$average_speed = d[d$temperature == 44,]$average_speed * 0.66  # drop by 33%
d[d$RH == 40,]$distance = d[d$RH == 40,]$distance * 0.25  # drop by 75%
d[d$RH == 55,]$distance = d[d$RH == 55,]$distance * 0.50  # drop by 50%
# d[d$RH == 70,]$distance = d[d$RH == 70,]$distance # no change
d[d$RH == 85,]$distance = d[d$RH == 85,]$distance * 0.75 # drop by 25%
d[d$RH == 100,]$distance = d[d$RH == 100,]$distance * 0.50  # drop by 50%
d[d$RH == 40,]$average_speed = d[d$RH == 40,]$average_speed * 0.66  # drop by 33%
d[d$RH == 55,]$average_speed = d[d$RH == 55,]$average_speed * 0.90  # drop by 10%
# d[d$RH == 70,]$average_speed = d[d$RH == 70,]$average_speed # no change
d[d$RH == 85,]$average_speed = d[d$RH == 85,]$average_speed * 0.90 # drop by 10%
d[d$RH == 100,]$average_speed = d[d$RH == 100,]$average_speed * 0.66  # drop by 33%
par(mfrow=c(2,2))
plot(d$temperature, d$distance, xlab="Temp (C)", ylab="Distance (m)",
col=as.factor(d$host_plant))
plot(d$temperature, d$average_speed, xlab="Temp (C)", ylab="Avg Speed (m/s)",
col=as.factor(d$host_plant))
plot(d$RH, d$distance, xlab="RH (%)", ylab="Distance (m)", col=as.factor(d$host_plant))
plot(d$RH, d$average_speed, xlab="RH (%)", ylab="Avg Speed (m/s)", col=as.factor(d$host_plant))
d[d$temperature == 12 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 12 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$temperature == 20 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 20 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
# temp = 28 no change
d[d$temperature == 36 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 36 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
d[d$temperature == 44 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 44 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$RH == 40 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 40 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$RH == 55 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 55 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
#RH = 70 no change
d[d$RH == 85 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 85 & d$host_plant == "K. elegans",]$distance * 0.90 # drop by additional 10%
d[d$RH == 100 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 100 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
par(mfrow=c(1,2)) # C. corindum = black | K. elegans = red
plot(d$temperature, d$distance, xlab="Temp (C)", ylab="Distance (m)", col=as.factor(d$host_plant))
plot(d$RH, d$distance, xlab="RH (%)", ylab="Distance (m)", col=as.factor(d$host_plant))
# pwc = "Pairwise Wilcoxon test" between groups
pwc <- d %>%
filter(flew_b == 1) %>% # select only those that flew
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- d %>% kruskal_test(distance ~ host_plant)
ggplot(d, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
rm(list=ls())
setwd("~/Desktop/git_repositories/extreme-flight-trials/")
library(rstatix)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
source_path = "~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Rsrc/"
script_names = c("center_flight_data.R", # Re-centers data
"clean_flight_data.R", # Loads and cleans data
"unique_flight_data.R")
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
dT1 = data_tested[data_tested$trial_type == "T1",]
d = dT1[,c("average_speed", "distance", "sex", "sex_c", "eggs_b",
"population", "host_plant", "flew","flew_b", "flight_type",
"mass", "beak", "thorax", "wing", "body", "wing2body")]
temp_treatments = c(12, 20, 28, 36, 44)
RH_treatments = c(40, 55, 70, 85, 100)
d$temperature = 0
d$RH = 0
d$temperature <- sample(temp_treatments, nrow(d), replace = TRUE)
d$RH <- sample(RH_treatments, nrow(d), replace = TRUE)
d[d$temperature == 12,]$distance = d[d$temperature == 12,]$distance * 0.25  # drop by 75%
d[d$temperature == 20,]$distance = d[d$temperature == 20,]$distance * 0.50  # drop by 50%
# d[d$temperature == 28,]$distance = d[d$temperature == 28,]$distance # no change
d[d$temperature == 36,]$distance = d[d$temperature == 36,]$distance * 0.75 # drop by 25%
d[d$temperature == 44,]$distance = d[d$temperature == 44,]$distance * 0.50  # drop by 50%
d[d$temperature == 12,]$average_speed = d[d$temperature == 12,]$average_speed * 0.66  # drop by 33%
d[d$temperature == 20,]$average_speed = d[d$temperature == 20,]$average_speed * 0.90  # drop by 10%
# d[d$temperature == 28,]$average_speed = d[d$temperature == 28,]$average_speed # no change
d[d$temperature == 36,]$average_speed = d[d$temperature == 36,]$average_speed * 0.90 # drop by 10%
d[d$temperature == 44,]$average_speed = d[d$temperature == 44,]$average_speed * 0.66  # drop by 33%
d[d$RH == 40,]$distance = d[d$RH == 40,]$distance * 0.25  # drop by 75%
d[d$RH == 55,]$distance = d[d$RH == 55,]$distance * 0.50  # drop by 50%
# d[d$RH == 70,]$distance = d[d$RH == 70,]$distance # no change
d[d$RH == 85,]$distance = d[d$RH == 85,]$distance * 0.75 # drop by 25%
d[d$RH == 100,]$distance = d[d$RH == 100,]$distance * 0.50  # drop by 50%
d[d$RH == 40,]$average_speed = d[d$RH == 40,]$average_speed * 0.66  # drop by 33%
d[d$RH == 55,]$average_speed = d[d$RH == 55,]$average_speed * 0.90  # drop by 10%
# d[d$RH == 70,]$average_speed = d[d$RH == 70,]$average_speed # no change
d[d$RH == 85,]$average_speed = d[d$RH == 85,]$average_speed * 0.90 # drop by 10%
d[d$RH == 100,]$average_speed = d[d$RH == 100,]$average_speed * 0.66  # drop by 33%
par(mfrow=c(2,2))
plot(d$temperature, d$distance, xlab="Temp (C)", ylab="Distance (m)",
col=as.factor(d$host_plant))
plot(d$temperature, d$average_speed, xlab="Temp (C)", ylab="Avg Speed (m/s)",
col=as.factor(d$host_plant))
plot(d$RH, d$distance, xlab="RH (%)", ylab="Distance (m)", col=as.factor(d$host_plant))
plot(d$RH, d$average_speed, xlab="RH (%)", ylab="Avg Speed (m/s)", col=as.factor(d$host_plant))
d[d$temperature == 12 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 12 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$temperature == 20 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 20 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
# temp = 28 no change
d[d$temperature == 36 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 36 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
d[d$temperature == 44 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 44 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$RH == 40 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 40 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$RH == 55 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 55 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
#RH = 70 no change
d[d$RH == 85 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 85 & d$host_plant == "K. elegans",]$distance * 0.90 # drop by additional 10%
d[d$RH == 100 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 100 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
par(mfrow=c(1,2)) # C. corindum = black | K. elegans = red
plot(d$temperature, d$distance, xlab="Temp (C)", ylab="Distance (m)", col=as.factor(d$host_plant))
plot(d$RH, d$distance, xlab="RH (%)", ylab="Distance (m)", col=as.factor(d$host_plant))
# pwc = "Pairwise Wilcoxon test" between groups
pwc <- d %>%
filter(flew_b == 1) %>% # select only those that flew
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- d %>% kruskal_test(distance ~ host_plant)
ggplot(d, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
d %>%
filter(flew_b == 1) %>% # select only those that flew
filter(temperature != 36) %>%
filter(RH != 70)
# pwc = "Pairwise Wilcoxon test" between groups
pwc <- d %>%
filter(flew_b == 1) %>% # select only those that flew
filter(temperature != 36) %>% # select for deviations from normal
filter(RH != 70) %>%
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- d %>% kruskal_test(distance ~ host_plant)
ggplot(d, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
temp = d %>%
filter(flew_b == 1) %>% # select only those that flew
filter(temperature != 36) %>% # select for temp and RH deviations from normal
filter(RH != 70)
# pwc = "Pairwise Wilcoxon test" between groups
df = d %>%
filter(flew_b == 1) %>% # select only those that flew
filter(temperature != 36) %>% # select for temp and RH deviations from normal
filter(RH != 70)
# pwc = "Pairwise Wilcoxon test" between groups
df = d %>%
filter(flew_b == 1) %>% # select only those that flew
filter(temperature != 36) %>% # select for temp and RH deviations from normal
filter(RH != 70)
pwc <- df %>%
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- df %>% kruskal_test(distance ~ host_plant)
ggplot(df, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
rm(list=ls())
setwd("~/Desktop/git_repositories/extreme-flight-trials/")
library(rstatix)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
source_path = "~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Rsrc/"
script_names = c("center_flight_data.R", # Re-centers data
"clean_flight_data.R", # Loads and cleans data
"unique_flight_data.R")
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
dT1 = data_tested[data_tested$trial_type == "T1",]
d = dT1[,c("average_speed", "distance", "sex", "sex_c", "eggs_b",
"population", "host_plant", "flew","flew_b", "flight_type",
"mass", "beak", "thorax", "wing", "body", "wing2body")]
temp_treatments = c(12, 20, 28, 36, 44)
RH_treatments = c(40, 55, 70, 85, 100)
d$temperature = 0
d$RH = 0
d$temperature <- sample(temp_treatments, nrow(d), replace = TRUE)
d$RH <- sample(RH_treatments, nrow(d), replace = TRUE)
d[d$temperature == 12,]$distance = d[d$temperature == 12,]$distance * 0.25  # drop by 75%
d[d$temperature == 20,]$distance = d[d$temperature == 20,]$distance * 0.50  # drop by 50%
# d[d$temperature == 28,]$distance = d[d$temperature == 28,]$distance # no change
d[d$temperature == 36,]$distance = d[d$temperature == 36,]$distance * 0.75 # drop by 25%
d[d$temperature == 44,]$distance = d[d$temperature == 44,]$distance * 0.50  # drop by 50%
d[d$temperature == 12,]$average_speed = d[d$temperature == 12,]$average_speed * 0.66  # drop by 33%
d[d$temperature == 20,]$average_speed = d[d$temperature == 20,]$average_speed * 0.90  # drop by 10%
# d[d$temperature == 28,]$average_speed = d[d$temperature == 28,]$average_speed # no change
d[d$temperature == 36,]$average_speed = d[d$temperature == 36,]$average_speed * 0.90 # drop by 10%
d[d$temperature == 44,]$average_speed = d[d$temperature == 44,]$average_speed * 0.66  # drop by 33%
d[d$RH == 40,]$distance = d[d$RH == 40,]$distance * 0.25  # drop by 75%
d[d$RH == 55,]$distance = d[d$RH == 55,]$distance * 0.50  # drop by 50%
# d[d$RH == 70,]$distance = d[d$RH == 70,]$distance # no change
d[d$RH == 85,]$distance = d[d$RH == 85,]$distance * 0.75 # drop by 25%
d[d$RH == 100,]$distance = d[d$RH == 100,]$distance * 0.50  # drop by 50%
d[d$RH == 40,]$average_speed = d[d$RH == 40,]$average_speed * 0.66  # drop by 33%
d[d$RH == 55,]$average_speed = d[d$RH == 55,]$average_speed * 0.90  # drop by 10%
# d[d$RH == 70,]$average_speed = d[d$RH == 70,]$average_speed # no change
d[d$RH == 85,]$average_speed = d[d$RH == 85,]$average_speed * 0.90 # drop by 10%
d[d$RH == 100,]$average_speed = d[d$RH == 100,]$average_speed * 0.66  # drop by 33%
par(mfrow=c(2,2))
plot(d$temperature, d$distance, xlab="Temp (C)", ylab="Distance (m)",
col=as.factor(d$host_plant))
plot(d$temperature, d$average_speed, xlab="Temp (C)", ylab="Avg Speed (m/s)",
col=as.factor(d$host_plant))
plot(d$RH, d$distance, xlab="RH (%)", ylab="Distance (m)", col=as.factor(d$host_plant))
plot(d$RH, d$average_speed, xlab="RH (%)", ylab="Avg Speed (m/s)", col=as.factor(d$host_plant))
d[d$temperature == 12 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 12 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$temperature == 20 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 20 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
# temp = 28 no change
d[d$temperature == 36 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 36 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
d[d$temperature == 44 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 44 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$RH == 40 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 40 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$RH == 55 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 55 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
#RH = 70 no change
d[d$RH == 85 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 85 & d$host_plant == "K. elegans",]$distance * 0.90 # drop by additional 10%
d[d$RH == 100 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 100 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
par(mfrow=c(1,2)) # C. corindum = black | K. elegans = red
plot(d$temperature, d$distance, xlab="Temp (C)", ylab="Distance (m)", col=as.factor(d$host_plant))
plot(d$RH, d$distance, xlab="RH (%)", ylab="Distance (m)", col=as.factor(d$host_plant))
# pwc = "Pairwise Wilcoxon test" between groups
df = d %>%
filter(flew_b == 1) %>% # select only those that flew
filter(temperature != 36) %>% # select for temp and RH deviations from normal
filter(RH != 70)
pwc <- df %>%
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- df %>% kruskal_test(distance ~ host_plant)
ggplot(df, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
rm(list=ls())
setwd("~/Desktop/git_repositories/extreme-flight-trials/")
library(rstatix)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
source_path = "~/Desktop/git_repositories/SBB-dispersal/avbernat_working_on/Rsrc/"
script_names = c("center_flight_data.R", # Re-centers data
"clean_flight_data.R", # Loads and cleans data
"unique_flight_data.R")
for (script in script_names) {
path = paste0(source_path, script)
source(path)
}
data <- read_flight_data("data/all_flight_data-Winter2020.csv")
data_all <- data[[1]]
data_tested <- data[[2]]
dT1 = data_tested[data_tested$trial_type == "T1",]
d = dT1[,c("average_speed", "distance", "sex", "sex_c", "eggs_b",
"population", "host_plant", "flew","flew_b", "flight_type",
"mass", "beak", "thorax", "wing", "body", "wing2body")]
temp_treatments = c(12, 20, 28, 36, 44)
RH_treatments = c(40, 55, 70, 85, 100)
d$temperature = 0
d$RH = 0
d$temperature <- sample(temp_treatments, nrow(d), replace = TRUE)
d$RH <- sample(RH_treatments, nrow(d), replace = TRUE)
d[d$temperature == 12,]$distance = d[d$temperature == 12,]$distance * 0.25  # drop by 75%
d[d$temperature == 20,]$distance = d[d$temperature == 20,]$distance * 0.50  # drop by 50%
# d[d$temperature == 28,]$distance = d[d$temperature == 28,]$distance # no change
d[d$temperature == 36,]$distance = d[d$temperature == 36,]$distance * 0.75 # drop by 25%
d[d$temperature == 44,]$distance = d[d$temperature == 44,]$distance * 0.50  # drop by 50%
d[d$temperature == 12,]$average_speed = d[d$temperature == 12,]$average_speed * 0.66  # drop by 33%
d[d$temperature == 20,]$average_speed = d[d$temperature == 20,]$average_speed * 0.90  # drop by 10%
# d[d$temperature == 28,]$average_speed = d[d$temperature == 28,]$average_speed # no change
d[d$temperature == 36,]$average_speed = d[d$temperature == 36,]$average_speed * 0.90 # drop by 10%
d[d$temperature == 44,]$average_speed = d[d$temperature == 44,]$average_speed * 0.66  # drop by 33%
d[d$RH == 40,]$distance = d[d$RH == 40,]$distance * 0.25  # drop by 75%
d[d$RH == 55,]$distance = d[d$RH == 55,]$distance * 0.50  # drop by 50%
# d[d$RH == 70,]$distance = d[d$RH == 70,]$distance # no change
d[d$RH == 85,]$distance = d[d$RH == 85,]$distance * 0.75 # drop by 25%
d[d$RH == 100,]$distance = d[d$RH == 100,]$distance * 0.50  # drop by 50%
d[d$RH == 40,]$average_speed = d[d$RH == 40,]$average_speed * 0.66  # drop by 33%
d[d$RH == 55,]$average_speed = d[d$RH == 55,]$average_speed * 0.90  # drop by 10%
# d[d$RH == 70,]$average_speed = d[d$RH == 70,]$average_speed # no change
d[d$RH == 85,]$average_speed = d[d$RH == 85,]$average_speed * 0.90 # drop by 10%
d[d$RH == 100,]$average_speed = d[d$RH == 100,]$average_speed * 0.66  # drop by 33%
par(mfrow=c(2,2))
plot(d$temperature, d$distance, xlab="Temp (C)", ylab="Distance (m)",
col=as.factor(d$host_plant))
plot(d$temperature, d$average_speed, xlab="Temp (C)", ylab="Avg Speed (m/s)",
col=as.factor(d$host_plant))
plot(d$RH, d$distance, xlab="RH (%)", ylab="Distance (m)", col=as.factor(d$host_plant))
plot(d$RH, d$average_speed, xlab="RH (%)", ylab="Avg Speed (m/s)", col=as.factor(d$host_plant))
d[d$temperature == 12 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 12 & d$host_plant == "K. elegans",]$distance * 0.50  # drop by additional 20%
d[d$temperature == 20 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 20 & d$host_plant == "K. elegans",]$distance * 0.60  # drop by additional 10%
# temp = 28 no change
d[d$temperature == 36 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 36 & d$host_plant == "K. elegans",]$distance * 0.60  # drop by additional 10%
d[d$temperature == 44 & d$host_plant == "K. elegans",]$distance =
d[d$temperature == 44 & d$host_plant == "K. elegans",]$distance * 0.50  # drop by additional 20%
d[d$RH == 40 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 40 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
d[d$RH == 55 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 55 & d$host_plant == "K. elegans",]$distance * 0.90  # drop by additional 10%
#RH = 70 no change
d[d$RH == 85 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 85 & d$host_plant == "K. elegans",]$distance * 0.90 # drop by additional 10%
d[d$RH == 100 & d$host_plant == "K. elegans",]$distance =
d[d$RH == 100 & d$host_plant == "K. elegans",]$distance * 0.80  # drop by additional 20%
par(mfrow=c(1,2)) # C. corindum = black | K. elegans = red
plot(d$temperature, d$distance, xlab="Temp (C)", ylab="Distance (m)", col=as.factor(d$host_plant))
plot(d$RH, d$distance, xlab="RH (%)", ylab="Distance (m)", col=as.factor(d$host_plant))
# pwc = "Pairwise Wilcoxon test" between groups
df = d %>%
filter(flew_b == 1) %>% # select only those that flew
filter(temperature != 36) %>% # select for temp and RH deviations from normal
filter(RH != 70)
pwc <- df %>%
dunn_test(distance ~ host_plant, p.adjust.method = "bonferroni") %>%
add_xy_position(x = "host_plant")
res.kruskal <- df %>% kruskal_test(distance ~ host_plant)
ggplot(df, aes(host_plant, distance)) +
geom_violin() +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
theme(legend.position="none") +
xlab("Host Plant") +
ylab("Distance (m)") +
geom_boxplot(width=0.1) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
